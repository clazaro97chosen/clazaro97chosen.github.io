var tipuesearch = {"pages":[{"title":"Docker Part Two","text":"Building an Image Classifier using the Sequential a very exciting introduction to part 2 of the docker tutorial series The return object of calling the fit() is a History object which contains the training parameters, list of epochs, and the loss and other metrics calculated at the end of each epoch Making predictions with the model Use model's predict_classes() method if you only want the class with the highest probability (even if that probability might be low) Building a Regression MLP using the Sequential API Example will work with scikit learn housing data (no missing value only numerical features for simplicity sake) Handling multiple inputs Adding an auxillory output to ensure the underlying part of the network learns something useful without relying on the rest of the network to do this you would need to add an extra output how would you do this?","tags":"docker","url":"/Docker-Part-Two","loc":"/Docker-Part-Two"},{"title":"Docker Tutorial 101","text":"Python argparse introduction Introducing Positional arguments import argparse parser = argparse.ArgumentParser() parser.add_argument(\"square\", help=\"will square square provided lol\", type=int) args = parser.parse_args() print(args.square**2) In [1]: #!python3 prog.py 4 -v -v In [2]: import math","tags":"docker","url":"/Docker-tutorial-101","loc":"/Docker-tutorial-101"}]};